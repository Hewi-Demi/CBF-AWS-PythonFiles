{"filter":false,"title":"14.Calc_Weight_json.py","tooltip":"/14.Calc_Weight_json.py","undoManager":{"mark":64,"position":64,"stack":[[{"start":{"row":0,"column":0},"end":{"row":30,"column":1},"action":"remove","lines":["{","   \"molecules\":{","      \"lsInsulin\":\"malwmrllpllallalwgpdpaaa\",","      \"bInsulin\":\"fvnqhlcgshlvealylvcgergffytpkt\",","      \"aInsulin\":\"giveqcctsicslyqlenycn\",","      \"cInsulin\":\"rreaedlqvgqvelgggpgagslqplalegslqkr\"","   },","   \"weights\":{","      \"A\":89.09,","      \"C\":121.16,","      \"D\":133.10,","      \"E\":147.13,","      \"F\":165.19,","      \"G\":75.07,","      \"H\":155.16,","      \"I\":131.17,","      \"K\":146.19,","      \"L\":131.17,","      \"M\":149.21,","      \"N\":132.12,","      \"P\":115.13,","      \"Q\":146.15,","      \"R\":174.20,","      \"S\":105.09,","      \"T\":119.12,","      \"V\":117.15,","      \"W\":204.23,","      \"Y\":181.19","   },","   \"molecularWeightInsulinActual\":5807.63","}"],"id":2}],[{"start":{"row":0,"column":0},"end":{"row":30,"column":1},"action":"insert","lines":["{","   \"molecules\":{","      \"lsInsulin\":\"malwmrllpllallalwgpdpaaa\",","      \"bInsulin\":\"fvnqhlcgshlvealylvcgergffytpkt\",","      \"aInsulin\":\"giveqcctsicslyqlenycn\",","      \"cInsulin\":\"rreaedlqvgqvelgggpgagslqplalegslqkr\"","   },","   \"weights\":{","      \"A\":89.09,","      \"C\":121.16,","      \"D\":133.10,","      \"E\":147.13,","      \"F\":165.19,","      \"G\":75.07,","      \"H\":155.16,","      \"I\":131.17,","      \"K\":146.19,","      \"L\":131.17,","      \"M\":149.21,","      \"N\":132.12,","      \"P\":115.13,","      \"Q\":146.15,","      \"R\":174.20,","      \"S\":105.09,","      \"T\":119.12,","      \"V\":117.15,","      \"W\":204.23,","      \"Y\":181.19","   },","   \"molecularWeightInsulinActual\":5807.63","}"],"id":3}],[{"start":{"row":30,"column":0},"end":{"row":30,"column":1},"action":"remove","lines":["}"],"id":4}],[{"start":{"row":0,"column":0},"end":{"row":30,"column":0},"action":"remove","lines":["{","   \"molecules\":{","      \"lsInsulin\":\"malwmrllpllallalwgpdpaaa\",","      \"bInsulin\":\"fvnqhlcgshlvealylvcgergffytpkt\",","      \"aInsulin\":\"giveqcctsicslyqlenycn\",","      \"cInsulin\":\"rreaedlqvgqvelgggpgagslqplalegslqkr\"","   },","   \"weights\":{","      \"A\":89.09,","      \"C\":121.16,","      \"D\":133.10,","      \"E\":147.13,","      \"F\":165.19,","      \"G\":75.07,","      \"H\":155.16,","      \"I\":131.17,","      \"K\":146.19,","      \"L\":131.17,","      \"M\":149.21,","      \"N\":132.12,","      \"P\":115.13,","      \"Q\":146.15,","      \"R\":174.20,","      \"S\":105.09,","      \"T\":119.12,","      \"V\":117.15,","      \"W\":204.23,","      \"Y\":181.19","   },","   \"molecularWeightInsulinActual\":5807.63",""],"id":5}],[{"start":{"row":0,"column":0},"end":{"row":0,"column":22},"action":"insert","lines":["import jsonFileHandler"],"id":6}],[{"start":{"row":0,"column":22},"end":{"row":1,"column":0},"action":"insert","lines":["",""],"id":7}],[{"start":{"row":1,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["data = jsonFileHandler.readJsonFile('files/insulin.json')",""],"id":8}],[{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["",""],"id":9}],[{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"remove","lines":["",""],"id":10}],[{"start":{"row":2,"column":0},"end":{"row":11,"column":35},"action":"insert","lines":["if data != \"\" :","    bInsulin = data['molecules']['bInsulin']","    aInsulin = data['molecules']['aInsulin']","    insulin = bInsulin + aInsulin","    molecularWeightInsulinActual = data['molecularWeightInsulinActual']","    print('bInsulin: ' + bInsulin)","    print('aInsulin: ' + aInsulin)","    print('molecularWeightInsulinActual: ' + str(molecularWeightInsulinActual))","else:","    print(\"Error. Exiting program\")"],"id":11}],[{"start":{"row":11,"column":35},"end":{"row":12,"column":0},"action":"insert","lines":["",""],"id":12},{"start":{"row":12,"column":0},"end":{"row":12,"column":4},"action":"insert","lines":["    "]},{"start":{"row":12,"column":4},"end":{"row":13,"column":0},"action":"insert","lines":["",""]},{"start":{"row":13,"column":0},"end":{"row":13,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":13,"column":4},"end":{"row":15,"column":37},"action":"insert","lines":["bInsulin: fvnqhlcgshlvealylvcgergffytpkt","aInsulin: giveqcctsicslyqlenycn","molecularWeightInsulinActual: 5807.63"],"id":13}],[{"start":{"row":15,"column":37},"end":{"row":16,"column":0},"action":"insert","lines":["",""],"id":14}],[{"start":{"row":16,"column":0},"end":{"row":17,"column":0},"action":"insert","lines":["",""],"id":15}],[{"start":{"row":0,"column":22},"end":{"row":1,"column":0},"action":"insert","lines":["",""],"id":16}],[{"start":{"row":14,"column":1},"end":{"row":16,"column":37},"action":"remove","lines":["   bInsulin: fvnqhlcgshlvealylvcgergffytpkt","aInsulin: giveqcctsicslyqlenycn","molecularWeightInsulinActual: 5807.63"],"id":17}],[{"start":{"row":3,"column":15},"end":{"row":4,"column":0},"action":"insert","lines":["",""],"id":18},{"start":{"row":4,"column":0},"end":{"row":4,"column":3},"action":"insert","lines":["   "]}],[{"start":{"row":3,"column":0},"end":{"row":4,"column":0},"action":"insert","lines":["",""],"id":19}],[{"start":{"row":3,"column":0},"end":{"row":4,"column":0},"action":"remove","lines":["",""],"id":20}],[{"start":{"row":3,"column":0},"end":{"row":4,"column":0},"action":"insert","lines":["",""],"id":21}],[{"start":{"row":0,"column":0},"end":{"row":17,"column":0},"action":"remove","lines":["import jsonFileHandler","","data = jsonFileHandler.readJsonFile('files/insulin.json')","","if data != \"\" :","   ","    bInsulin = data['molecules']['bInsulin']","    aInsulin = data['molecules']['aInsulin']","    insulin = bInsulin + aInsulin","    molecularWeightInsulinActual = data['molecularWeightInsulinActual']","    print('bInsulin: ' + bInsulin)","    print('aInsulin: ' + aInsulin)","    print('molecularWeightInsulinActual: ' + str(molecularWeightInsulinActual))","else:","    print(\"Error. Exiting program\")","    "," ",""],"id":23}],[{"start":{"row":0,"column":0},"end":{"row":0,"column":22},"action":"insert","lines":["import jsonFileHandler"],"id":24}],[{"start":{"row":0,"column":22},"end":{"row":1,"column":0},"action":"insert","lines":["",""],"id":25},{"start":{"row":1,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":2,"column":0},"end":{"row":2,"column":57},"action":"insert","lines":["data = jsonFileHandler.readJsonFile('files/insulin.json')"],"id":26}],[{"start":{"row":2,"column":57},"end":{"row":3,"column":0},"action":"insert","lines":["",""],"id":27},{"start":{"row":3,"column":0},"end":{"row":4,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":4,"column":0},"end":{"row":13,"column":35},"action":"insert","lines":["if data != \"\" :","    bInsulin = data['molecules']['bInsulin']","    aInsulin = data['molecules']['aInsulin']","    insulin = bInsulin + aInsulin","    molecularWeightInsulinActual = data['molecularWeightInsulinActual']","    print('bInsulin: ' + bInsulin)","    print('aInsulin: ' + aInsulin)","    print('molecularWeightInsulinActual: ' + str(molecularWeightInsulinActual))","else:","    print(\"Error. Exiting program\")"],"id":28}],[{"start":{"row":13,"column":35},"end":{"row":14,"column":0},"action":"insert","lines":["",""],"id":29},{"start":{"row":14,"column":0},"end":{"row":14,"column":4},"action":"insert","lines":["    "]},{"start":{"row":14,"column":4},"end":{"row":15,"column":0},"action":"insert","lines":["",""]},{"start":{"row":15,"column":0},"end":{"row":15,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":15,"column":0},"end":{"row":15,"column":4},"action":"remove","lines":["    "],"id":30}],[{"start":{"row":15,"column":0},"end":{"row":16,"column":0},"action":"insert","lines":["",""],"id":31}],[{"start":{"row":14,"column":0},"end":{"row":14,"column":4},"action":"remove","lines":["    "],"id":33}],[{"start":{"row":15,"column":0},"end":{"row":15,"column":4},"action":"insert","lines":["    "],"id":34}],[{"start":{"row":13,"column":35},"end":{"row":14,"column":0},"action":"insert","lines":["",""],"id":37},{"start":{"row":14,"column":0},"end":{"row":14,"column":4},"action":"insert","lines":["    "]},{"start":{"row":14,"column":4},"end":{"row":15,"column":0},"action":"insert","lines":["",""]},{"start":{"row":15,"column":0},"end":{"row":15,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":15,"column":4},"end":{"row":25,"column":122},"action":"insert","lines":["# Calculating the molecular weight of insulin  ","# Getting a list of the amino acid (AA) weights  ","aaWeights = data['weights']","# Count the number of each amino acids  ","aaCountInsulin = ({x: float(insulin.upper().count(x)) for x in ['A','C','D', 'E', 'F', 'G', 'H', 'I', 'K', 'L', 'M', 'N', 'P', 'Q', 'R','S', 'T','V', 'W', 'Y']})  ","# Multiply the count by the weights  ","molecularWeightInsulin = sum({x: (aaCountInsulin[x]*aaWeights[x]) for x in","['A', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'K', 'L', 'M', 'N', 'P', 'Q', 'R','S', 'T', 'V', 'W', 'Y']}.values())  ","print(\"The rough molecular weight of insulin: \" +","str(molecularWeightInsulin))","print(\"Percent error: \" + str(((molecularWeightInsulin - molecularWeightInsulinActual)/molecularWeightInsulinActual)*100))"],"id":38}],[{"start":{"row":16,"column":0},"end":{"row":16,"column":4},"action":"insert","lines":["    "],"id":39},{"start":{"row":17,"column":0},"end":{"row":17,"column":4},"action":"insert","lines":["    "]},{"start":{"row":18,"column":0},"end":{"row":18,"column":4},"action":"insert","lines":["    "]},{"start":{"row":19,"column":0},"end":{"row":19,"column":4},"action":"insert","lines":["    "]},{"start":{"row":20,"column":0},"end":{"row":20,"column":4},"action":"insert","lines":["    "]},{"start":{"row":21,"column":0},"end":{"row":21,"column":4},"action":"insert","lines":["    "]},{"start":{"row":22,"column":0},"end":{"row":22,"column":4},"action":"insert","lines":["    "]},{"start":{"row":23,"column":0},"end":{"row":23,"column":4},"action":"insert","lines":["    "]},{"start":{"row":24,"column":0},"end":{"row":24,"column":4},"action":"insert","lines":["    "]},{"start":{"row":25,"column":0},"end":{"row":25,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":26,"column":0},"end":{"row":26,"column":1},"action":"insert","lines":["e"],"id":40},{"start":{"row":26,"column":1},"end":{"row":26,"column":2},"action":"insert","lines":["l"]},{"start":{"row":26,"column":2},"end":{"row":26,"column":3},"action":"insert","lines":["s"]},{"start":{"row":26,"column":3},"end":{"row":26,"column":4},"action":"insert","lines":["e"]}],[{"start":{"row":26,"column":4},"end":{"row":26,"column":5},"action":"insert","lines":[" "],"id":41},{"start":{"row":26,"column":5},"end":{"row":26,"column":6},"action":"insert","lines":[":"]}],[{"start":{"row":26,"column":6},"end":{"row":27,"column":0},"action":"insert","lines":["",""],"id":42},{"start":{"row":27,"column":0},"end":{"row":27,"column":4},"action":"insert","lines":["    "]},{"start":{"row":27,"column":4},"end":{"row":27,"column":5},"action":"insert","lines":["P"]}],[{"start":{"row":27,"column":4},"end":{"row":27,"column":5},"action":"remove","lines":["P"],"id":43}],[{"start":{"row":27,"column":4},"end":{"row":27,"column":5},"action":"insert","lines":["o"],"id":44},{"start":{"row":27,"column":5},"end":{"row":27,"column":6},"action":"insert","lines":["r"]},{"start":{"row":27,"column":6},"end":{"row":27,"column":7},"action":"insert","lines":["i"]},{"start":{"row":27,"column":7},"end":{"row":27,"column":8},"action":"insert","lines":["n"]},{"start":{"row":27,"column":8},"end":{"row":27,"column":9},"action":"insert","lines":["t"]}],[{"start":{"row":27,"column":9},"end":{"row":27,"column":11},"action":"insert","lines":["()"],"id":45}],[{"start":{"row":27,"column":10},"end":{"row":27,"column":11},"action":"insert","lines":["e"],"id":46}],[{"start":{"row":27,"column":10},"end":{"row":27,"column":11},"action":"remove","lines":["e"],"id":47}],[{"start":{"row":27,"column":10},"end":{"row":27,"column":12},"action":"insert","lines":["\"\""],"id":48}],[{"start":{"row":27,"column":11},"end":{"row":27,"column":12},"action":"insert","lines":["E"],"id":49},{"start":{"row":27,"column":12},"end":{"row":27,"column":13},"action":"insert","lines":["r"]},{"start":{"row":27,"column":13},"end":{"row":27,"column":14},"action":"insert","lines":["r"]},{"start":{"row":27,"column":14},"end":{"row":27,"column":15},"action":"insert","lines":["o"]},{"start":{"row":27,"column":15},"end":{"row":27,"column":16},"action":"insert","lines":["r"]}],[{"start":{"row":27,"column":16},"end":{"row":27,"column":17},"action":"insert","lines":[" "],"id":50}],[{"start":{"row":27,"column":16},"end":{"row":27,"column":17},"action":"remove","lines":[" "],"id":51}],[{"start":{"row":27,"column":16},"end":{"row":27,"column":17},"action":"insert","lines":["."],"id":52}],[{"start":{"row":27,"column":17},"end":{"row":27,"column":18},"action":"insert","lines":[" "],"id":53},{"start":{"row":27,"column":18},"end":{"row":27,"column":19},"action":"insert","lines":["E"]},{"start":{"row":27,"column":19},"end":{"row":27,"column":20},"action":"insert","lines":["x"]},{"start":{"row":27,"column":20},"end":{"row":27,"column":21},"action":"insert","lines":["i"]},{"start":{"row":27,"column":21},"end":{"row":27,"column":22},"action":"insert","lines":["t"]},{"start":{"row":27,"column":22},"end":{"row":27,"column":23},"action":"insert","lines":["i"]}],[{"start":{"row":27,"column":23},"end":{"row":27,"column":24},"action":"insert","lines":["n"],"id":54},{"start":{"row":27,"column":24},"end":{"row":27,"column":25},"action":"insert","lines":["g"]}],[{"start":{"row":27,"column":25},"end":{"row":27,"column":26},"action":"insert","lines":[" "],"id":55},{"start":{"row":27,"column":26},"end":{"row":27,"column":27},"action":"insert","lines":["p"]},{"start":{"row":27,"column":27},"end":{"row":27,"column":28},"action":"insert","lines":["r"]},{"start":{"row":27,"column":28},"end":{"row":27,"column":29},"action":"insert","lines":["o"]},{"start":{"row":27,"column":29},"end":{"row":27,"column":30},"action":"insert","lines":["g"]},{"start":{"row":27,"column":30},"end":{"row":27,"column":31},"action":"insert","lines":["r"]},{"start":{"row":27,"column":31},"end":{"row":27,"column":32},"action":"insert","lines":["a"]},{"start":{"row":27,"column":32},"end":{"row":27,"column":33},"action":"insert","lines":["m"]}],[{"start":{"row":27,"column":4},"end":{"row":27,"column":5},"action":"remove","lines":["o"],"id":56}],[{"start":{"row":27,"column":4},"end":{"row":27,"column":5},"action":"insert","lines":["p"],"id":57}],[{"start":{"row":26,"column":0},"end":{"row":27,"column":35},"action":"remove","lines":["else :","    print(\"Error. Exiting program\")"],"id":58}],[{"start":{"row":27,"column":1},"end":{"row":28,"column":35},"action":"insert","lines":["else :","    print(\"Error. Exiting program\")"],"id":59}],[{"start":{"row":25,"column":126},"end":{"row":26,"column":0},"action":"remove","lines":["",""],"id":60}],[{"start":{"row":26,"column":0},"end":{"row":26,"column":1},"action":"remove","lines":[" "],"id":61}],[{"start":{"row":26,"column":4},"end":{"row":26,"column":5},"action":"remove","lines":[" "],"id":62}],[{"start":{"row":26,"column":4},"end":{"row":26,"column":5},"action":"insert","lines":[" "],"id":63}],[{"start":{"row":26,"column":0},"end":{"row":27,"column":38},"action":"remove","lines":["else :","    print(\"Error. Exiting program\")   "],"id":64}],[{"start":{"row":15,"column":0},"end":{"row":15,"column":4},"action":"remove","lines":["    "],"id":65},{"start":{"row":16,"column":0},"end":{"row":16,"column":4},"action":"remove","lines":["    "]},{"start":{"row":17,"column":0},"end":{"row":17,"column":4},"action":"remove","lines":["    "]},{"start":{"row":18,"column":0},"end":{"row":18,"column":4},"action":"remove","lines":["    "]},{"start":{"row":19,"column":0},"end":{"row":19,"column":4},"action":"remove","lines":["    "]},{"start":{"row":20,"column":0},"end":{"row":20,"column":4},"action":"remove","lines":["    "]},{"start":{"row":21,"column":0},"end":{"row":21,"column":4},"action":"remove","lines":["    "]},{"start":{"row":22,"column":0},"end":{"row":22,"column":4},"action":"remove","lines":["    "]},{"start":{"row":23,"column":0},"end":{"row":23,"column":4},"action":"remove","lines":["    "]},{"start":{"row":24,"column":0},"end":{"row":24,"column":4},"action":"remove","lines":["    "]},{"start":{"row":25,"column":0},"end":{"row":25,"column":4},"action":"remove","lines":["    "]}],[{"start":{"row":15,"column":0},"end":{"row":26,"column":0},"action":"remove","lines":["# Calculating the molecular weight of insulin  ","# Getting a list of the amino acid (AA) weights  ","aaWeights = data['weights']","# Count the number of each amino acids  ","aaCountInsulin = ({x: float(insulin.upper().count(x)) for x in ['A','C','D', 'E', 'F', 'G', 'H', 'I', 'K', 'L', 'M', 'N', 'P', 'Q', 'R','S', 'T','V', 'W', 'Y']})  ","# Multiply the count by the weights  ","molecularWeightInsulin = sum({x: (aaCountInsulin[x]*aaWeights[x]) for x in","['A', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'K', 'L', 'M', 'N', 'P', 'Q', 'R','S', 'T', 'V', 'W', 'Y']}.values())  ","print(\"The rough molecular weight of insulin: \" +","str(molecularWeightInsulin))","print(\"Percent error: \" + str(((molecularWeightInsulin - molecularWeightInsulinActual)/molecularWeightInsulinActual)*100))",""],"id":66}],[{"start":{"row":11,"column":79},"end":{"row":12,"column":0},"action":"insert","lines":["",""],"id":67},{"start":{"row":12,"column":0},"end":{"row":12,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":12,"column":4},"end":{"row":13,"column":0},"action":"insert","lines":["",""],"id":68},{"start":{"row":13,"column":0},"end":{"row":13,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":13,"column":4},"end":{"row":24,"column":0},"action":"insert","lines":["# Calculating the molecular weight of insulin  ","# Getting a list of the amino acid (AA) weights  ","aaWeights = data['weights']","# Count the number of each amino acids  ","aaCountInsulin = ({x: float(insulin.upper().count(x)) for x in ['A','C','D', 'E', 'F', 'G', 'H', 'I', 'K', 'L', 'M', 'N', 'P', 'Q', 'R','S', 'T','V', 'W', 'Y']})  ","# Multiply the count by the weights  ","molecularWeightInsulin = sum({x: (aaCountInsulin[x]*aaWeights[x]) for x in","['A', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'K', 'L', 'M', 'N', 'P', 'Q', 'R','S', 'T', 'V', 'W', 'Y']}.values())  ","print(\"The rough molecular weight of insulin: \" +","str(molecularWeightInsulin))","print(\"Percent error: \" + str(((molecularWeightInsulin - molecularWeightInsulinActual)/molecularWeightInsulinActual)*100))",""],"id":69}],[{"start":{"row":14,"column":0},"end":{"row":14,"column":4},"action":"insert","lines":["    "],"id":70},{"start":{"row":15,"column":0},"end":{"row":15,"column":4},"action":"insert","lines":["    "]},{"start":{"row":16,"column":0},"end":{"row":16,"column":4},"action":"insert","lines":["    "]},{"start":{"row":17,"column":0},"end":{"row":17,"column":4},"action":"insert","lines":["    "]},{"start":{"row":18,"column":0},"end":{"row":18,"column":4},"action":"insert","lines":["    "]},{"start":{"row":19,"column":0},"end":{"row":19,"column":4},"action":"insert","lines":["    "]},{"start":{"row":20,"column":0},"end":{"row":20,"column":4},"action":"insert","lines":["    "]},{"start":{"row":21,"column":0},"end":{"row":21,"column":4},"action":"insert","lines":["    "]},{"start":{"row":22,"column":0},"end":{"row":22,"column":4},"action":"insert","lines":["    "]},{"start":{"row":23,"column":0},"end":{"row":23,"column":4},"action":"insert","lines":["    "]}]]},"ace":{"folds":[],"scrolltop":68.20000000000006,"scrollleft":0,"selection":{"start":{"row":16,"column":44},"end":{"row":16,"column":44},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":3,"state":"start","mode":"ace/mode/python"}},"timestamp":1678902657787,"hash":"3543f075fb671547ca8bd5f66c5f1b81f192b283"}